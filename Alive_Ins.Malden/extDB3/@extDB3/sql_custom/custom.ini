[Default]
Version = 1  
;; Used incase there is ever a breaking change, or to inform user in log about a new feature.

Strip Chars = "/\|;{}<>'`"
;; List of characters to strip out 
 
Strip Chars Mode = 1
;; 0 = Strip Bad Chars, 1 = Strip + Log Bad Chars, 2 = Return Error & Log Bad Chars  
;; Note: Logging on works when sending data to database.

Input SQF Parser = false  
;; Experimental  
;; If enabled will use SQF Array Parser instead of : seperator for values  
;; i.e 0:SQL:UpdatePlayer:["Joe",[1,2,0],0.22333,"PlayerBackpack",-3]  
;; Advantage is that you don't need to strip : seperator from user inputted values  

;; Number of Retrys = 5  
;; Number of Retrys if Error Encountered  
;; Note: If doing multiple SQL i.e SQL1_1 SQL2_1 etc, it will retry everything.  

; --------------------------------------------------------------------------------
; SQL Statements
; --------------------------------------------------------------------------------

;; PLAYERS
;;______________________________________________________________
[HG_playerExist]
SQL1_1 = SELECT CASE WHEN EXISTS (SELECT PID FROM HG_Players WHERE PID = ?) THEN 'true' ELSE 'false' END;
SQL1_INPUTS = 1-STRING

OUTPUT = 1

;;______________________________________________________________
[HG_playerInsert]
SQL1_1 = INSERT INTO HG_Players (PID, XP, Gear, Money, Bank) VALUES (?,?,?,?,?);
SQL1_INPUTS = 1-STRING, 2, 3, 4, 5

;;______________________________________________________________
[HG_playerSelect]
SQL1_1 = SELECT Money, Bank, XP, Kills, Gear FROM HG_Players WHERE PID = ?;
SQL1_INPUTS = 1-STRING

OUTPUT = 1

;;______________________________________________________________
[HG_moneyReset]
SQL1_1 = UPDATE HG_Players SET Money = -1, Bank = -1;

Prepared Statement = false

;;______________________________________________________________
[HG_updateMoney]
SQL1_1 = UPDATE HG_Players SET Money = ? WHERE PID = ?;
SQL1_INPUTS = 1, 2-STRING

;;______________________________________________________________
[HG_updateKills]
SQL1_1 = UPDATE HG_Players SET Kills = ? WHERE PID = ?;
SQL1_INPUTS = 1, 2-STRING

;;______________________________________________________________
[HG_updateXP]
SQL1_1 = UPDATE HG_Players SET XP = ? WHERE PID = ?;
SQL1_INPUTS = 1, 2-STRING

;;______________________________________________________________
[HG_updateBank]
SQL1_1 = UPDATE HG_Players SET Bank = ? WHERE PID = ?;
SQL1_INPUTS = 1, 2-STRING

;;______________________________________________________________
[HG_updateGear]
SQL1_1 = UPDATE HG_Players SET Gear = ? WHERE PID = ?;
SQL1_INPUTS = 1, 2-STRING

;;______________________________________________________________
[HG_updateMoneyBank]
SQL1_1 = UPDATE HG_Players SET Money = ?, Bank = ? WHERE PID = ?;
SQL1_INPUTS = 1, 2, 3-STRING

;; VEHICLES
;;______________________________________________________________
[HG_vehicleInsert]
SQL1_1 = INSERT INTO HG_Vehicles (PID, Classname, Plate, Inventory, Active, Color) VALUES (?,?,?,?,?,?);
SQL1_INPUTS = 1-STRING, 2-STRING, 3, 4, 5, 6-STRING

;;______________________________________________________________
[HG_vehicleSelect]
SQL1_1 = SELECT Classname, Plate, Color FROM HG_Vehicles WHERE PID = ? AND Active = 0 AND Alive = 1;
SQL1_INPUTS = 1-STRING

OUTPUT = 1

;;______________________________________________________________
[HG_vehicleDelete]
SQL1_1 = DELETE FROM HG_Vehicles WHERE PID = ? AND PLATE = ?;
SQL1_INPUTS = 1-STRING, 2

;;______________________________________________________________
[HG_vehicleActiveUpdate]
SQL1_1 = UPDATE HG_Vehicles SET Active = ? WHERE PID = ? AND Plate = ?;
SQL1_INPUTS = 1, 2-STRING, 3

;;______________________________________________________________
[HG_vehicleAliveUpdate]
SQL1_1 = UPDATE HG_Vehicles SET Active = ?, Alive = ? WHERE PID = ? AND Plate = ?;
SQL1_INPUTS = 1, 2, 3-STRING, 4

;;______________________________________________________________
[HG_vehicleGetInventory]
SQL1_1 = SELECT Inventory FROM HG_Vehicles WHERE PID = ? AND Plate = ?;
SQL1_INPUTS = 1-STRING, 2

OUTPUT = 1

;;______________________________________________________________
[HG_vehicleUpdateInventory]
SQL1_1 = UPDATE HG_Vehicles SET Inventory = ? WHERE PID = ? AND Plate = ?;
SQL1_INPUTS = 1, 2-STRING, 3

;;______________________________________________________________
[HG_resetGarages]
SQL1_1 = DELETE FROM HG_Vehicles;

Prepared Statement = false

;;______________________________________________________________
[HG_activeReset]
SQL1_1 = UPDATE HG_Vehicles SET Active = 0;

Prepared Statement = false

;; WHITELIST
;;______________________________________________________________
[HG_whitelistSelect]
SQL1_1 = SELECT Civilian, West, Resistance, East FROM HG_Whitelist;

OUTPUT = 1

;;______________________________________________________________
[HG_whitelistUpdateCiv]
SQL1_1 = UPDATE HG_Whitelist SET Civilian = ?;
SQL1_INPUTS = 1

;;______________________________________________________________
[HG_whitelistUpdateWest]
SQL1_1 = UPDATE HG_Whitelist SET West = ?;
SQL1_INPUTS = 1

;;______________________________________________________________
[HG_whitelistUpdateGuer]
SQL1_1 = UPDATE HG_Whitelist SET Resistance = ?;
SQL1_INPUTS = 1

;;______________________________________________________________
[HG_whitelistUpdateEast]
SQL1_1 = UPDATE HG_Whitelist SET East = ?;
SQL1_INPUTS = 1
